Базы данных

БД - способ хранения (организации) данных главной особенностью 
которого является наличие связий (реляций) между данными

Таблица - контейнер для данных в котором каждая информационная 
еденица имеет определенную структуру (одинаковую для всех)

Ячейка хранит примитивные типизированные данные 
то есть кажая ячейка имееет свой тип данных

Работа с базой данных может иметь несколько целей
Создание таблиц
Заполнение таблиц данными


СУБД - система управления бд (DBMS) - оболочка (П.О.) предоставляющая интерфейс 
взаимодействия как с разметкой таблиц так и с хранимыми данными

SQL - (Structure Query Language) - язык структурных запросов, язык команд для СУБД

Согласно с указанными задачами SQL имеет под-языки

DDL Data Defenition Language - язык разметки
DML Data Manipulation Language - язык работы с данными
DCL Data Control Language - доступ к СУБД и данным
TCL Transaction Control Language

Сам язык очень старый (1974) современные версии дополнены новым функционалом
но этот функционал привязан к конкретной СУБД 

T-SQL (MS SQL)
PSQL - Procedure Oracle (MariaDB) \MySQL

Плюс в каждой СУБД есть особенности в основном свои 
дополнительные типы данных и операции между ними
Поэтому команды SQL 99% не совместимы между собой


О синтаксисе 
SQL - регистронезависимый
но бывает установленно настройками зависимость регистра имен
(таблиц полей и т.п. пользовательмскийх обьектов)

Команды не распределены по пространствам имен поэтому 
почти все норамльные слова зарезервированны
Для разделения пользовательских имен и стандартных команд принято писать их в разном регистре

SELECT name FROM users
select NAME from USERS

Идентификация ключевые поля 
В БД есть принцип каждая информационная еденица должна быть уникальна
Должна бытьь команда обращающаяся именно к этой еденице
Например в таблице хранятся чеки (дата и сумма)
в какой то момент кассовые аппараты пробивают товар на одну и туже сумму и с одинаковой сумме

Date Sum
11	 100
11	 100

как удалить одну из них любое условие приведет к удалению обоих или одного поля из двух 
Ключевым называется поле значение которого не повторяется (уникально)
такое поле может использоватся для идентификации однозначного обращения к данной еденице информации
Ключ - это поле или комбинация полей идентифицирующая запись
На практике чаще всего каждая таблица имеет свое ключевое поле id (tablename_id)

Какой тип выбрать для id 
Часто в учебниках это int
В стандарте UUID (GUID) id - с глобальной уникальностью

Индексное (индексированое) поле - поле с сортировкой
Одно из полей индексируется автоматически (не требует доп данных)
ключевое поле которое индексируется называют первичным ключем


DATETIME
DATETIME2

'2022-05-19' '2022-05-19 12:00:00' '2022-05-19T12:00:00'
'2022-05-19' = '2022-05-19 00:00:00'

CHAR(N) - текст длиной N символов
VARCHAR(N) - текст длиной не более N символов
NCHAR(N) - ровно N символов (ЮНИКОД)
NVARCHAR(N) - не более N символов (ЮНИКОД)
TEXT - CLOB (CHAR LARGE OBJECT)

Значения
'TEXT' - CHAR VARCHAR
N'TEXT' - NCHAR NVARCHAR


В отличие от языков програмирования в БД NULL - отсутствиее данных
NULL = NULL -> NULL
NULL <> NULL -> NULL
2 <> NULL -> NULL
NULL IS NULL -> TRUE
2 IS NOT NULL -> TRUE


Атрибуты для значений

field INT NULL - допускается NULL - по дефолту
field INT NOT NULL - не допускается NULL


Связи
Связями называют отношения создаваемые между таблицами между таблицами
или другими элементами
Обычно связи позволяют создовать ссылки  (указание) на запись в другой таблице


Managers --> Departments
Id_main_dep    --->     Id
FOREIGN KEY				PRIMARY KEY


Приоритетные обьединения

А JOIN (INNER JOIN) B полное совпадение из обьединения A и B

Типы отношений (relation multiplicity)
один к одному
один ко многим
многие ко многим


Агрегация и группирование


Функции агрегации - это функции которые принемают множество значений и возвращают одно число
SUM
COUNT
AVG
MIN
MAX

Запросы с группированием - запросы в которых смешиваются скалярные и множественные значения



Sales
Id_Prod Cnt GROUP BY Id_Prod --> Id_Prod Cnt --> Id_Prod Cnt
 1       1                          1     1         1      [1,4,1]                                  
 2       2                          1     4                                                
 3       3                          1     1                                                
 1       4                          2     2         2      [2,2]                                  
 2       2                          2     2                                                
 1       1                          3     3         3      [3]                                 

