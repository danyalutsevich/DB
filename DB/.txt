Базы данных

БД - способ хранения (организации) данных главной особенностью 
которого является наличие связий (реляций) между данными

Таблица - контейнер для данных в котором каждая информационная 
еденица имеет определенную структуру (одинаковую для всех)

Ячейка хранит примитивные типизированные данные 
то есть кажая ячейка имееет свой тип данных

Работа с базой данных может иметь несколько целей
Создание таблиц
Заполнение таблиц данными


СУБД - система управления бд (DBMS) - оболочка (П.О.) предоставляющая интерфейс 
взаимодействия как с разметкой таблиц так и с хранимыми данными

SQL - (Structure Query Language) - язык структурных запросов, язык команд для СУБД

Согласно с указанными задачами SQL имеет под-языки

DDL Data Defenition Language - язык разметки
DML Data Manipulation Language - язык работы с данными
DCL Data Control Language - доступ к СУБД и данным
TCL Transaction Control Language

Сам язык очень старый (1974) современные версии дополнены новым функционалом
но этот функционал привязан к конкретной СУБД 

T-SQL (MS SQL)
PSQL - Procedure Oracle (MariaDB) \MySQL

Плюс в каждой СУБД есть особенности в основном свои 
дополнительные типы данных и операции между ними
Поэтому команды SQL 99% не совместимы между собой


О синтаксисе 
SQL - регистронезависимый
но бывает установленно настройками зависимость регистра имен
(таблиц полей и т.п. пользовательмскийх обьектов)

Команды не распределены по пространствам имен поэтому 
почти все норамльные слова зарезервированны
Для разделения пользовательских имен и стандартных команд принято писать их в разном регистре

SELECT name FROM users
select NAME from USERS

Идентификация ключевые поля 
В БД есть принцип каждая информационная еденица должна быть уникальна
Должна бытьь команда обращающаяся именно к этой еденице
Например в таблице хранятся чеки (дата и сумма)
в какой то момент кассовые аппараты пробивают товар на одну и туже сумму и с одинаковой сумме

Date Sum
11	 100
11	 100

как удалить одну из них любое условие приведет к удалению обоих или одного поля из двух 
Ключевым называется поле значение которого не повторяется (уникально)
такое поле может использоватся для идентификации однозначного обращения к данной еденице информации
Ключ - это поле или комбинация полей идентифицирующая запись
На практике чаще всего каждая таблица имеет свое ключевое поле id (tablename_id)

Какой тип выбрать для id 
Часто в учебниках это int
В стандарте UUID (GUID) id - с глобальной уникальностью

Индексное (индексированое) поле - поле с сортировкой
Одно из полей индексируется автоматически (не требует доп данных)
ключевое поле которое индексируется называют первичным ключем


DATETIME
DATETIME2

'2022-05-19' '2022-05-19 12:00:00' '2022-05-19T12:00:00'
'2022-05-19' = '2022-05-19 00:00:00'

CHAR(N) - текст длиной N символов
VARCHAR(N) - текст длиной не более N символов
NCHAR(N) - ровно N символов (ЮНИКОД)
NVARCHAR(N) - не более N символов (ЮНИКОД)
TEXT - CLOB (CHAR LARGE OBJECT)

Значения
'TEXT' - CHAR VARCHAR
N'TEXT' - NCHAR NVARCHAR


В отличие от языков програмирования в БД NULL - отсутствиее данных
NULL = NULL -> NULL
NULL <> NULL -> NULL
2 <> NULL -> NULL
NULL IS NULL -> TRUE
2 IS NOT NULL -> TRUE


Атрибуты для значений

field INT NULL - допускается NULL - по дефолту
field INT NOT NULL - не допускается NULL


Связи
Связями называют отношения создаваемые между таблицами между таблицами
или другими элементами
Обычно связи позволяют создовать ссылки  (указание) на запись в другой таблице


Managers --> Departments
Id_main_dep    --->     Id
FOREIGN KEY				PRIMARY KEY


Приоритетные обьединения

А JOIN (INNER JOIN) B полное совпадение из обьединения A и B

Типы отношений (relation multiplicity)
один к одному
один ко многим
многие ко многим


Агрегация и группирование


Функции агрегации - это функции которые принемают множество значений и возвращают одно число
SUM
COUNT
AVG
MIN
MAX

Запросы с группированием - запросы в которых смешиваются скалярные и множественные значения



Sales
Id_Prod Cnt GROUP BY Id_Prod --> Id_Prod Cnt --> Id_Prod Cnt
 1       1                          1     1         1      [1,4,1]                                  
 2       2                          1     4                                                
 3       3                          1     1                                                
 1       4                          2     2         2      [2,2]                                  
 2       2                          2     2                                                
 1       1                          3     3         3      [3]                                 

Хранимые процедуры (Stored Procedures) - пользовательские
обьекты сокращающие способ обращения к большим запросам
В отличие от пользовательских функций которые не могут быть частью других 
запросов и не могут использоватся в объединениях.

Чаще всего используется для интерфейса доступа к данным скрывая реализацию и повышая безопасность
Процедуры хранятся в БД они создаются 1 раз и не разрушаются после отключения

Нормализация

Процесс организации (или реорганизации) данных в БД (создание или изменение БД)
Главные цели:
- устранение избыточности данных (устранение аномалий)
- устранение несогласованных зависимостей

Аномалии
-- аномалии модификации
-- аномалии удаления
-- аномалии добавления


Первая нормальная форма (1НФ)

-- Нет повторов
-- В каждой ячейке скалярное (атомарное) значение (не массив)
-- В каждом столбце данные одного типа

Функции пользовательскиее елементы хранящиеся в СУБД



Вторая нормальная форма (2НФ)

-- Состоит в 1НФ
-- Все нелючевые аттрибуты зависят от первичного ключа
Если есть транзитивная зависимость ее надо выносить в отдельную таблицу

Модель	Фирма	Цена	Скидка
M5		BMW		5500000	5%  
X5M		BMW		6000000	5%
M1		BMW		2500000	5%
GT-R	Nissan	5000000	10%

Ключ - модель
Фирма однозначно зависит от модели
Цена -  зависит от модели
Скидка зависит не от модели а от Фирмы (нарушение 2НФ)

РЕШЕНИЕ

Модель	Фирма	Цена		|		Фирма	Скидка
M5		BMW		5500000		|		BMW		5%
X5M		BMW		6000000		|		Nissan	10%
M1		BMW		2500000		| 
GT-R	Nissan	5000000		| 


Модель	Магазин		Телефон
BMW		Риал-авто	87-33-98  -- прямая зависимость - фирма магазин, фирма телефон
Audi	Риал-авто	87-33-98  -- транзитивная зависимость фирма - телефон
Nissan	Некст-Авто	94-54-12  -- если ключ фирма то 3НФ нарушается



Модель	Магазин		|	Магазин		Телефон
BMW		Риал-авто	|	Риал-авто	87-33-98
Audi	Риал-авто	|	Некст-Авто	94-54-12
Nissan	Некст-Авто	|

не стоит использовать литералы в качестве ключа
Возможно появление повторяющихся значений в ключе, в следствии аномалия вставки

Третья нормальная форма
-- 2НФ
-- Все неключевые поля должны нетранзитивно зависить от первичного ключа



БКНФ - 3.5НФ - Усиленная 3НФ


Модель			Фирма	Цена	-- тривиальная зависимость модель - фирма
BMW		M5		BMW		5500000 -- фирма есть подмножеством модели
BMW		X5M		BMW		6000000	-- Детерминант - модель
BMW		M1		BMW		2500000 -- Зависимая часть - фирма
Nissan	GT-R	Nissan	5000000
----
Mini Cooper		BMW		2500000


БКНФ - требует чтобы для всех выполнялись определенные требования
В отличии от 3НФ в которой все ориентируется на ключевое поле, в БКНФ перебираются все варианты
Общий признак нарушения повторяющиеся значения в строках повторяются парами - если повторяется одно то повторяется и другое

Например
Скидка - Фирма, Скидка - Сумма

Таблица нарушает  БКНФ
Модель			Фирма	Цена		Сервис			Скидка
BMW		M5		BMW		5500000		Мотор-Сервис	7%
BMW		X5M		BMW		6000000		Мотор-Сервис	10%
BMW		M1		BMW		2500000		Мотор-Сервис	3%
Nissan	GT-R	Nissan	5000000		Флагман-Сервис	7%
Mini Cooper		BMW		2500000		Мотор-Сервис	3%


Другими словами любая пара может быть частью ключа

Скрыли модель можно определить сервис т.к. он зависит от Фирмы
Скрыли модель, фирму - можно определить скидку т.к. она зависит от цены

Правильная таблица

Модель			Фирма	Цена	|	Фирма	Сервис
BMW		M5		BMW		5500000	|	BMW		Мотор-Сервис
BMW		X5M		BMW		6000000	|	Nissan	Флагман-Сервис
BMW		M1		BMW		2500000	|--------------------------
Nissan	GT-R	Nissan	5000000	|	Цена		Скидка
Mini Cooper		BMW		2500000	|	6000000		10%
								|	5000000		7%
								|	2500000		3%

Триггеры

В СУБД триггеры это аналог событий и их обработчиков
По характеру триггеры делят на DML и DDL триггеры


Триггеры данных (DML) часто используются для:
	задач аккумулирования
	фильтрации данных

Аккумулирование - ведение дополнительных таблиц/записей,
связанных с статистическими/итоговыми данными.
Например нужно постоянно иметь сведенья о сумме продаж 
поскольку ранние записи не меняются приходится постоянно 
повторять вычисления которые раннее уже складывались
И этим результатом можно воспользоватся

После каждого подсчета суммы продаж нужно обновить запись в таблице аккумулирования,
при добавления новой записи в таблицу аккумулирования сумма обновляется

Технически триггер является хранимой процедурой привязанной к конкретной таблице

Pagination

Разбиение на страницы
большая выборка передается клиенту по частям
Разделяют клиентскую и серверную пагинацию
в зависимости от того где происходит пагинация
Обычно передаются 2 параметра page и perpage

В MS SQL SERVER средства пагинации реализованы OFFSET и FETCH
Эти средства не совместимы с ограничением выборки TOP






